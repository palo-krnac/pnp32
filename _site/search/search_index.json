{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"\ud83c\udfaf pnp32 Modular Motion Controller for openPNP","text":"<p>High-performance, fully modular motion controller for advanced Pick &amp; Place machines. Designed to seamlessly integrate with OpenPnP and support direct SPI-controlled stepper drivers for ultra-smooth and precise motion.</p>"},{"location":"#key-features","title":"\ud83d\ude80 Key Features","text":"<ul> <li>\u2705 ESP32-S3 or Teensy-based core \u2014 powerful microcontroller with floating-point, high-speed I/O, and robust connectivity</li> <li>\u2705 Native SPI motion control \u2014 supports TMC5160, TMC5130, PowerSTEP01, and L64xx drivers without STEP/DIR emulation</li> <li>\u2705 Flexible architecture \u2014 single-board and multi-board configurations for scalable machine designs</li> <li>\u2705 Built-in CAN bus \u2014 robust communication between multiple controllers or modular head units</li> <li>\u2705 RS485 interface \u2014 control feeder modules or additional peripherals with industrial reliability</li> <li>\u2705 Integrated vacuum and air control \u2014 including pressure/vacuum sensing and smart valve control</li> <li>\u2705 Advanced lighting and vision control \u2014 supports multi-channel LED lighting, camera triggers, and auxiliary outputs</li> <li>\u2705 USB-to-Serial bridge \u2014 direct communication with OpenPnP software</li> </ul>"},{"location":"#modifications-configurations","title":"\ud83e\udde9 Modifications &amp; Configurations","text":""},{"location":"#modification-1-single-board-setup","title":"\ud83d\udd39 Modification 1: Single Board Setup","text":"<ul> <li>All stepper motor drivers for all axes integrated on one board</li> <li>Centralized control logic with all communication interfaces (CAN, RS485, USB)</li> <li>Simplified wiring for smaller or simpler machines</li> </ul>"},{"location":"#modification-2-dual-board-modular-setup","title":"\ud83d\udd39 Modification 2: Dual Board Modular Setup","text":""},{"location":"#main-controller-board","title":"\ud83d\udfe6 Main Controller Board","text":"<ul> <li>Controls primary machine axes: X, Y, or duplicated X + single Y (up to 3 axes)</li> <li>Handles all communication interfaces (CAN, RS485, USB)</li> <li>Acts as the master motion controller</li> </ul>"},{"location":"#head-controller-board","title":"\ud83d\udfe9 Head Controller Board","text":"<ul> <li>Mounted on the machine head(s), connected via CAN bus</li> <li>Controls additional axes: Z, A, B, C, D, E, F</li> <li>Supports air/vacuum control, pressure/vacuum sensing</li> <li>Controls head lighting, glue/paste dispensers</li> <li>Available in two variants:</li> <li>2-head version: for two nozzles</li> <li>4-head version: supports four nozzles or combination of nozzles &amp; dispensers</li> </ul>"},{"location":"#g-code-configuration-machine-parameters","title":"\u2699\ufe0f G-code Configuration &amp; Machine Parameters","text":"<p>All key motion parameters and hardware configurations are set directly from OpenPnP via custom G-code commands. This enables easy tuning, calibration, and reconfiguration without modifying firmware or recompiling code.</p>"},{"location":"#supported-g-code-commands","title":"\ud83d\udcac Supported G-code Commands","text":"G-code Description Example Usage Documentation <code>M350</code> Set microstepping for each axis <code>M350 X16 Y16 Z32</code> RepRap M350 <code>M906</code> Set motor current (mA) per axis <code>M906 X1000 Y1000 Z800</code> RepRap M906 <code>M92</code> Set steps per mm (axis scaling) <code>M92 X80 Y80 Z400</code> RepRap M92 <code>M211</code> Enable/disable software endstops <code>M211 S1</code> RepRap M211 <code>M208</code> Set axis travel limits (soft limits) <code>M208 X0:300 Y0:250 Z0:150</code> Duet3D M208 <code>M569</code> Configure driver direction inversion <code>M569 X0 Y1 Z0</code> Duet3D M569 <code>M912</code> Set driver sense resistor calibration <code>M912 X20 Y20 Z18</code> Custom command <code>M913</code> Set dynamic current scaling % <code>M913 X70 Y70 Z80</code> Duet3D M913 <code>M950</code> Configure pin assignments for outputs <code>M950 P1 S0</code> Duet3D M950 <code>M355</code> Control LED lighting intensity <code>M355 P1 S255</code> RepRap M355 <code>M420</code> Enable bed leveling or machine compensation (if used) <code>M420 S1</code> RepRap M420"},{"location":"#possible-additional-configurations","title":"\ud83d\udee0 Possible Additional Configurations","text":"<ul> <li>Set acceleration, max speed, and jerk per axis (future extension)</li> <li>Configure vacuum thresholds and pressure sensor calibration</li> <li>Assign specific CAN node IDs for multi-board setups</li> <li>Control glue/paste pump parameters (pulse lengths, flow rates)</li> <li>Define custom tool offsets and head calibration parameters</li> </ul>"},{"location":"#board-parameters","title":"\ud83d\udee0 Board Parameters","text":"Parameter Value MCU ESP32-S3 Motor Drivers SPI controlled: TMC5160, TMC5130, PowerSTEP01, L64xx Axes Up to 12 axes total (depending on config) Feeders Up to 63 feeders total (depending on config) Comm. Interfaces CAN bus, RS485, USB-Serial Peripheral Control Air/vacuum valves, pressure sensors, lighting Voltage 12\u201348 V supply for motors Safety E-stop input, software limits, watchdog"},{"location":"#board-types","title":"\ud83d\udee0 Board Types","text":"Parameter Driver_XY Driver_Z Driver AB Driver CD pnp32_MCB_A ESP32-S3 af sfa FAF pnp32_MCB_B REFRF AREF AERF SPI controlled: TMC5160, TMC5130, PowerSTEP01, L64xx Axes AERF AREF RFAER Up to 12 axes total (depending on config) Feeders AER AERF AERF Up to 63 feeders total (depending on config) Comm. Interfaces ARF AREF ARF CAN bus, RS485, USB-Serial Peripheral Control RF ARF ARF Air/vacuum valves, pressure sensors, lighting Voltage ARF AR AFR 12\u201348 V supply for motors Safety SFAS ARFAE ARFAR E-stop input, software limits, watchdog"},{"location":"#software","title":"\ud83d\udcbb Software","text":"<ul> <li>Developed in PlatformIO</li> <li>Custom motion control firmware optimized for SPI-based drivers</li> <li>CAN bus stack for modular multi-board communication</li> <li>Feeder and peripheral control via RS485</li> <li>OpenPnP-compatible serial communication with dynamic G-code support</li> </ul>"},{"location":"#highlights","title":"\ud83d\udca1 Highlights","text":"<ul> <li>Ultra-precise motion with direct register-level SPI control (no missed steps)</li> <li>Full machine configuration and tuning via standard G-code from OpenPnP</li> <li>Modular design ready for scalable, high-end Pick &amp; Place machines</li> <li>Multi-head and multi-function ready: placement, glue dispensing, paste dispensing</li> <li>Designed for tinkerers, prosumers, and professional machine builders alike</li> </ul>"},{"location":"#getting-started","title":"\ud83d\udce6 Getting Started","text":"<p>1\ufe0f\u20e3 Clone this repository 2\ufe0f\u20e3 Install PlatformIO and dependencies 3\ufe0f\u20e3 Configure your hardware via G-code or <code>config.h</code> for base defaults 4\ufe0f\u20e3 Flash the firmware to your controller board 5\ufe0f\u20e3 Connect to OpenPnP and start tuning!</p>"},{"location":"#license","title":"\ud83d\udee1 License","text":"<p>This project is open-source under the MIT License. Contributions and pull requests are warmly welcome!</p>"},{"location":"#credits-inspiration","title":"\u2764\ufe0f Credits &amp; Inspiration","text":"<p>Inspired by OpenPnP community, modern motion control concepts, and the open hardware spirit. Special thanks to Trinamic (TMC), STMicroelectronics (PowerSTEP01, L64xx), and the global DIY PnP community.</p>"},{"location":"#screenshots-diagrams","title":"\u2728 Screenshots &amp; Diagrams","text":"<p>(Insert board design images, modular connection diagrams, example machine setups, head modules, etc.)</p>"},{"location":"#ready-to-go-lets-build-next-level-openpnp-machines-together","title":"\u2705 Ready to go? Let's build next-level OpenPnP machines together!","text":"<p>\"\"\"</p>"}]}